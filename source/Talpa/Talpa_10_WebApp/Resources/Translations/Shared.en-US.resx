<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Frog" xml:space="preserve">
    <value>Froggy</value>
  </data>
  <data name="Teams" xml:space="preserve">
    <value>Teams</value>
  </data>
  <data name="ManageOutings" xml:space="preserve">
    <value>Manage outings</value>
  </data>
  <data name="Scoreboard" xml:space="preserve">
    <value>Scoreboard</value>
  </data>
  <data name="OutingsToPlan" xml:space="preserve">
    <value>Outings to plan</value>
  </data>
  <data name="Suggestions" xml:space="preserve">
    <value>Suggestions</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome to TALPA!</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="Manager" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="Homepage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="Create New" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Outing" xml:space="preserve">
    <value>Outing</value>
  </data>
  <data name="Dates" xml:space="preserve">
    <value>Dates</value>
  </data>
  <data name="SelectDays" xml:space="preserve">
    <value>Select Days</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="Are you sure you want to delete this?" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="No users selected" xml:space="preserve">
    <value>No users selected</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Access Denied" xml:space="preserve">
    <value>Access Denied</value>
  </data>
  <data name="You do not have access to this resource" xml:space="preserve">
    <value>You do not have access to this resource</value>
  </data>
  <data name="An error occurred while processing your request" xml:space="preserve">
    <value>An error occurred while processing your request</value>
  </data>
  <data name="You are not assigned to a team" xml:space="preserve">
    <value>You are not assigned to a team</value>
  </data>
  <data name="Outing does not exist" xml:space="preserve">
    <value>Outing does not exist</value>
  </data>
  <data name="No entity found with this id" xml:space="preserve">
    <value>No entity found with this id</value>
  </data>
  <data name="Error while creating" xml:space="preserve">
    <value>Error while creating</value>
  </data>
  <data name="Item successfully created" xml:space="preserve">
    <value>Item successfully created</value>
  </data>
  <data name="Error while updating" xml:space="preserve">
    <value>Error while updating</value>
  </data>
  <data name="Item successfully updated" xml:space="preserve">
    <value>Item successfully updated</value>
  </data>
  <data name="Item successfully deleted" xml:space="preserve">
    <value>Item successfully deleted</value>
  </data>
  <data name="Error while deleting" xml:space="preserve">
    <value>Error while deleting</value>
  </data>
  <data name="Error white attaching users" xml:space="preserve">
    <value>Error white attaching users</value>
  </data>
  <data name="Restrictions" xml:space="preserve">
    <value>Restrictions</value>
  </data>
  <data name="Suggestion" xml:space="preserve">
    <value>Suggestion</value>
  </data>
  <data name="Vote" xml:space="preserve">
    <value>Vote</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="choose your desired dates" xml:space="preserve">
    <value>Choose your desired dates</value>
  </data>
  <data name="choose your desired outing" xml:space="preserve">
    <value>Choose your desired outing</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="What" xml:space="preserve">
    <value>What</value>
  </data>
  <data name="When" xml:space="preserve">
    <value>When</value>
  </data>
  <data name="Not available in development" xml:space="preserve">
    <value>Not available in Development mode</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Votes" xml:space="preserve">
    <value>Votes</value>
  </data>
  <data name="You have already voted for this outing" xml:space="preserve">
    <value>You have already voted for this outing</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Invalid input" xml:space="preserve">
    <value>Invalid input</value>
  </data>
  <data name="Can not be zero" xml:space="preserve">
    <value>Can not be zero</value>
  </data>
  <data name="You must select a suggestion" xml:space="preserve">
    <value>You must select a suggestion</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="Please select your preferred date and outing suggestion." xml:space="preserve">
    <value>Please select your preferred date and outing suggestion.</value>
  </data>
  <data name="Suggestion with the same name already exists" xml:space="preserve">
    <value>Suggestion with the same name already exists</value>
  </data>
    <data name="PlannedOutings" xml:space="preserve">
        <value>Planned outings</value>
      </data>
    <data name="These are the current planned outings" xml:space="preserve">
        <value>These are the current planned outings</value>
      </data>
    <data name="Outings" xml:space="preserve">
        <value>Outings</value>
    </data>
    <data name="Confirm" xml:space="preserve">
        <value>Confirm</value>
    </data>
    <data name="Most chosen suggestion" xml:space="preserve">
        <value>Most chosen suggestion(s)</value>
    </data>
    <data name="Most chosen date" xml:space="preserve">
        <value>Most chosen date(s)</value>
    </data>
    <data name="There are no votes for this outing" xml:space="preserve">
        <value>There are no votes for this outing</value>
    </data>
    <data name="Days left" xml:space="preserve">
        <value>Days left</value>
    </data>
  <data name="Image" xml:space="preserve">
      <value>Image</value>
  </data>
</root>